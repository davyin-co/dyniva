diff --git a/crop.module b/crop.module
index aa7d5f8f7..2661dcedf 100644
--- a/crop.module
+++ b/crop.module
@@ -157,50 +157,3 @@ function crop_file_delete(FileInterface $file) {
     $crop->delete();
   }
 }
-
-/**
- * Implements hook_file_url_alter().
- */
-function crop_file_url_alter(&$uri) {
-  // Process only files that are stored in "styles" directory.
-  if (strpos($uri, '/styles/') !== FALSE && preg_match('/\/styles\/(.*?)\/(.*?)\/(.+)/', $uri, $match)) {
-    // Match image style, schema, file subdirectory and file name.
-    // Get the image style ID.
-    $image_style_id = $match[1];
-    // Get the file path without query parameter.
-    $parsed_uri = UrlHelper::parse($match[3]);
-    // Get the file URI using parsed schema and file path.
-    $file_uri = $match[2] . '://' . $parsed_uri['path'];
-
-    // Prevent double hashing, if there is a hash argument already, do not add
-    // it again.
-    if (!empty($parsed_uri['query']['h'])) {
-      return;
-    }
-
-    if ($crop = Crop::getCropFromImageStyleId($file_uri, $image_style_id)) {
-      // Found a crop for this image, append a hash of it to the URL,
-      // so that browsers reload the image and CDNs and proxies can be bypassed.
-      $shortened_hash = substr(md5(implode($crop->position()) . implode($crop->anchor())), 0, 8);
-
-      // If the URI has a schema and that is not http, https or data, convert
-      // the URI to the external URL. Otherwise the appended query argument
-      // will be encoded.
-      // @see file_create_url()
-      $scheme = StreamWrapperManager::getScheme($uri);
-      if ($scheme && !in_array($scheme, ['http', 'https', 'data'])) {
-        if ($wrapper = \Drupal::service('stream_wrapper_manager')->getViaUri($uri)) {
-          $uri = $wrapper->getExternalUrl();
-        }
-      }
-
-      // Append either with a ? or a & if there are existing query arguments.
-      if (strpos($uri, '?') === FALSE) {
-        $uri .= '?h=' . $shortened_hash;
-      }
-      else {
-        $uri .= '&h=' . $shortened_hash;
-      }
-    }
-  }
-}
