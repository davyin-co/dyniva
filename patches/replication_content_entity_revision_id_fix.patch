diff --git a/src/Normalizer/ContentEntityNormalizer.php b/src/Normalizer/ContentEntityNormalizer.php
index 082875a..a0ae7eb 100644
--- a/src/Normalizer/ContentEntityNormalizer.php
+++ b/src/Normalizer/ContentEntityNormalizer.php
@@ -25,6 +25,7 @@
 use Symfony\Component\EventDispatcher\EventDispatcherInterface;
 use Symfony\Component\Serializer\Exception\UnexpectedValueException;
 use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
+use Drupal\Core\Entity\RevisionableInterface;
 
 class ContentEntityNormalizer extends NormalizerBase implements DenormalizerInterface {
 
@@ -188,6 +189,7 @@ public function denormalize($data, $class, $format = NULL, array $context = [])
     $entity_type_id = NULL;
     $entity_uuid = NULL;
     $entity_id = NULL;
+    $revision_id = NULL;
 
     // Get the default language of the entity
     $default_langcode = $data['@context']['@language'];
@@ -216,6 +218,7 @@ public function denormalize($data, $class, $format = NULL, array $context = [])
       $uuid_index = (isset($context['workspace']) && ($context['workspace'] instanceof WorkspaceInterface)) ? $this->indexFactory->get('multiversion.entity_index.uuid', $context['workspace']) : $this->indexFactory->get('multiversion.entity_index.uuid');
       if ($record = $uuid_index->get($entity_uuid)) {
         $entity_id = $record['entity_id'];
+        $revision_id = $record['revision_id'];
         if (empty($entity_type_id)) {
           $entity_type_id = $record['entity_type_id'];
         }
@@ -265,6 +268,7 @@ public function denormalize($data, $class, $format = NULL, array $context = [])
         $context['language'] = $key;
         $translations[$key] = $this->denormalizeTranslation($translation, $entity_id, $entity_uuid, $entity_type_id, $bundle_key, $entity_type, $id_key, $context, $rev, $revisions);
       }
+      $translations[$key][$revision_key][0]['value'] = $revision_id;
     }
 
     // @todo {@link https://www.drupal.org/node/2599926 Use the passed $class to instantiate the entity.}
@@ -293,6 +297,9 @@ public function denormalize($data, $class, $format = NULL, array $context = [])
         }
       }
     }
+    if ($entity instanceof RevisionableInterface) {
+      $entity->updateLoadedRevisionId();
+    }
 
     if ($entity_id && $entity) {
       $entity->enforceIsNew(FALSE);
